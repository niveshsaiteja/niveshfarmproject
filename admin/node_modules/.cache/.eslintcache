[{"C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\index.js":"1","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\App.js":"2","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\constants\\sidebar-menu.js":"3","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\pages\\Dashboard\\index.js":"4","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\pages\\Admin\\index.js":"5","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\pages\\Products\\products.jsx":"6","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\pages\\Farmers\\index.jsx":"7","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\pages\\Orders\\index.jsx":"8","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\components\\DashboardHeader\\index.jsx":"9","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\components\\Sidebar\\index.jsx":"10","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\constants\\data.js":"11","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\constants\\orders.js":"12","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\utils\\table-pagination.js":"13","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\components\\Sidebar\\sidebar-item.jsx":"14"},{"size":281,"mtime":1686250264081,"results":"15","hashOfConfig":"16"},{"size":1331,"mtime":1686250264052,"results":"17","hashOfConfig":"16"},{"size":845,"mtime":1686250264080,"results":"18","hashOfConfig":"16"},{"size":1741,"mtime":1686250264086,"results":"19","hashOfConfig":"16"},{"size":1112,"mtime":1686250264083,"results":"20","hashOfConfig":"16"},{"size":774,"mtime":1686250264088,"results":"21","hashOfConfig":"16"},{"size":6025,"mtime":1686250264086,"results":"22","hashOfConfig":"16"},{"size":6035,"mtime":1686250264088,"results":"23","hashOfConfig":"16"},{"size":1050,"mtime":1686250264068,"results":"24","hashOfConfig":"16"},{"size":1868,"mtime":1686250264068,"results":"25","hashOfConfig":"16"},{"size":7899,"mtime":1686250264078,"results":"26","hashOfConfig":"16"},{"size":2266,"mtime":1686250264079,"results":"27","hashOfConfig":"16"},{"size":414,"mtime":1686250264091,"results":"28","hashOfConfig":"16"},{"size":628,"mtime":1686250264068,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b867jz",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},"C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\index.js",[],[],"C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\App.js",["78"],[],"//app.css\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route  } from 'react-router-dom';\r\n\r\nimport SideBar from './components/Sidebar';\r\nimport DashboardHeader from './components/DashboardHeader';\r\nimport sidebar_menu from './constants/sidebar-menu';\r\n\r\nimport './App.css';\r\nimport Orders from './pages/Orders';\r\nimport Farmers from './pages/Farmers';\r\nimport Products  from './pages/Products/products';\r\nimport Dashboard from './pages/Dashboard/index';\r\nimport AdminDetails from './pages/Admin/index';\r\n\r\nfunction App () {\r\n  return(\r\n    <Router>\r\n      <div className='dashboard-container'>\r\n        <SideBar menu={sidebar_menu} />\r\n          <div className='dashboard-body'>\r\n              <Routes>\r\n                  <Route path=\"*\" element={<div></div>} />\r\n                  <Route exact path=\"/\" element={< Dashboard/>} />\r\n                  <Route exact path=\"/orders\" element={< Orders/>} />\r\n                  <Route exact path=\"/Farmers\" element={< Farmers/>} />\r\n                  <Route exact path=\"/products\" element={< Products/>} />\r\n                  <Route exact path=\"/locations\" element={<div></div>} />\r\n                  <Route exact path=\"/profile\" element={< AdminDetails/>} />\r\n              </Routes>\r\n          </div>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\constants\\sidebar-menu.js",[],[],"C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\pages\\Dashboard\\index.js",[],[],"C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\pages\\Admin\\index.js",[],[],"C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\pages\\Products\\products.jsx",[],[],"C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\pages\\Farmers\\index.jsx",["79"],[],"import React, {useState, useEffect} from 'react';\r\nimport DashboardHeader from '../../components/DashboardHeader';\r\n\r\nimport all_orders from '../../constants/orders';\r\nimport {calculateRange, sliceData} from '../../utils/table-pagination';\r\n\r\n\r\nimport '../styles.css';\r\nimport DoneIcon from '../../assets/icons/done.svg';\r\nimport CancelIcon from '../../assets/icons/cancel.svg';\r\nimport RefundedIcon from '../../assets/icons/refunded.svg';\r\n\r\nfunction Orders () {\r\n    const [search, setSearch] = useState('');\r\n    const [orders, setOrders] = useState(all_orders);\r\n    const [page, setPage] = useState(1);\r\n    const [pagination, setPagination] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setPagination(calculateRange(all_orders, 5));\r\n        setOrders(sliceData(all_orders, page, 5));\r\n    }, []);\r\n\r\n    // Search\r\n    const __handleSearch = (event) => {\r\n        setSearch(event.target.value);\r\n        if (event.target.value !== '') {\r\n            let search_results = orders.filter((item) =>\r\n                item.first_name.toLowerCase().includes(search.toLowerCase()) ||\r\n                item.last_name.toLowerCase().includes(search.toLowerCase()) ||\r\n                item.product.toLowerCase().includes(search.toLowerCase())\r\n            );\r\n            setOrders(search_results);\r\n        }\r\n        else {\r\n            __handleChangePage(1);\r\n        }\r\n    };\r\n\r\n    // Change Page \r\n    const __handleChangePage = (new_page) => {\r\n        setPage(new_page);\r\n        setOrders(sliceData(all_orders, new_page, 5));\r\n    }\r\n\r\n    return(\r\n        <div className='dashboard-content'>\r\n            <DashboardHeader\r\n                btnText=\"REFRESH\" />\r\n\r\n            <div className='dashboard-content-container'>\r\n                <div className='dashboard-content-header'>\r\n                    <h2>Farmers List</h2>\r\n                    <div className='dashboard-content-search'>\r\n                        <input\r\n                            type='text'\r\n                            value={search}\r\n                            placeholder='Search..'\r\n                            className='dashboard-content-input'\r\n                            onChange={e => __handleSearch(e)} />\r\n                    </div>\r\n                </div>\r\n\r\n                <table>\r\n                    <thead>\r\n                        <th>ID</th>\r\n                        <th>DATE</th>\r\n                        <th>STATUS</th>\r\n                        <th>FARMER</th>\r\n                        <th>ADDED PRODUCT</th>\r\n                        <th>PRICE</th>\r\n                    </thead>\r\n\r\n                    {orders.length !== 0 ?\r\n                        <tbody>\r\n                            {orders.map((order, index) => (\r\n                                <tr key={index}>\r\n                                    <td><span>{order.id}</span></td>\r\n                                    <td><span>{order.date}</span></td>\r\n                                    <td>\r\n                                        <div>\r\n                                            {order.status === 'Paid' ?\r\n                                                <img\r\n                                                    src={DoneIcon}\r\n                                                    alt='paid-icon'\r\n                                                    className='dashboard-content-icon' />\r\n                                            : order.status === 'Canceled' ?\r\n                                                <img\r\n                                                    src={CancelIcon}\r\n                                                    alt='canceled-icon'\r\n                                                    className='dashboard-content-icon' />\r\n                                            : order.status === 'Refunded' ?\r\n                                                <img\r\n                                                    src={RefundedIcon}\r\n                                                    alt='refunded-icon'\r\n                                                    className='dashboard-content-icon' />\r\n                                            : null}\r\n                                            <span>{order.status}</span>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>\r\n                                            <img \r\n                                                src={order.avatar}\r\n                                                className='dashboard-content-avatar'\r\n                                                alt={order.first_name + ' ' +order.last_name} />\r\n                                            <span>{order.first_name} {order.last_name}</span>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td><span>{order.product}</span></td>\r\n                                    <td><span>₹{order.price}</span></td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    : null}\r\n                </table>\r\n\r\n                {orders.length !== 0 ?\r\n                    <div className='dashboard-content-footer'>\r\n                        {pagination.map((item, index) => (\r\n                            <span \r\n                                key={index} \r\n                                className={item === page ? 'active-pagination' : 'pagination'}\r\n                                onClick={() => __handleChangePage(item)}>\r\n                                    {item}\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                : \r\n                    <div className='dashboard-content-footer'>\r\n                        <span className='empty-table'>No data</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders;","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\pages\\Orders\\index.jsx",["80"],[],"//order.css\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport DashboardHeader from '../../components/DashboardHeader';\r\n\r\nimport all_orders from '../../constants/orders';\r\nimport {calculateRange, sliceData} from '../../utils/table-pagination';\r\n\r\nimport '../styles.css';\r\nimport DoneIcon from '../../assets/icons/done.svg';\r\nimport CancelIcon from '../../assets/icons/cancel.svg';\r\nimport RefundedIcon from '../../assets/icons/refunded.svg';\r\n\r\nfunction Orders () {\r\n    const [search, setSearch] = useState('');\r\n    const [orders, setOrders] = useState(all_orders);\r\n    const [page, setPage] = useState(1);\r\n    const [pagination, setPagination] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setPagination(calculateRange(all_orders, 5));\r\n        setOrders(sliceData(all_orders, page, 5));\r\n    }, []);\r\n\r\n    // Search\r\n    const __handleSearch = (event) => {\r\n        setSearch(event.target.value);\r\n        if (event.target.value !== '') {\r\n            let search_results = orders.filter((item) =>\r\n                item.first_name.toLowerCase().includes(search.toLowerCase()) ||\r\n                item.last_name.toLowerCase().includes(search.toLowerCase()) ||\r\n                item.product.toLowerCase().includes(search.toLowerCase())\r\n            );\r\n            setOrders(search_results);\r\n        }\r\n        else {\r\n            __handleChangePage(1);\r\n        }\r\n    };\r\n\r\n    // Change Page \r\n    const __handleChangePage = (new_page) => {\r\n        setPage(new_page);\r\n        setOrders(sliceData(all_orders, new_page, 5));\r\n    }\r\n\r\n    return(\r\n        <div className='dashboard-content'>\r\n            <DashboardHeader\r\n                btnText=\"REFRESH\" />\r\n\r\n            <div className='dashboard-content-container'>\r\n                <div className='dashboard-content-header'>\r\n                    <h2>Orders List</h2>\r\n                    <div className='dashboard-content-search'>\r\n                        <input\r\n                            type='text'\r\n                            value={search}\r\n                            placeholder='Search..'\r\n                            className='dashboard-content-input'\r\n                            onChange={e => __handleSearch(e)} />\r\n                    </div>\r\n                </div>\r\n\r\n                <table>\r\n                    <thead>\r\n                        <th>ID</th>\r\n                        <th>DATE</th>\r\n                        <th>STATUS</th>\r\n                        <th>COSTUMER</th>\r\n                        <th>PRODUCT</th>\r\n                        <th>REVENUE</th>\r\n                    </thead>\r\n\r\n                    {orders.length !== 0 ?\r\n                        <tbody>\r\n                            {orders.map((order, index) => (\r\n                                <tr key={index}>\r\n                                    <td><span>{order.id}</span></td>\r\n                                    <td><span>{order.date}</span></td>\r\n                                    <td>\r\n                                        <div>\r\n                                            {order.status === 'Paid' ?\r\n                                                <img\r\n                                                    src={DoneIcon}\r\n                                                    alt='paid-icon'\r\n                                                    className='dashboard-content-icon' />\r\n                                            : order.status === 'Canceled' ?\r\n                                                <img\r\n                                                    src={CancelIcon}\r\n                                                    alt='canceled-icon'\r\n                                                    className='dashboard-content-icon' />\r\n                                            : order.status === 'Refunded' ?\r\n                                                <img\r\n                                                    src={RefundedIcon}\r\n                                                    alt='refunded-icon'\r\n                                                    className='dashboard-content-icon' />\r\n                                            : null}\r\n                                            <span>{order.status}</span>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>\r\n                                            <img \r\n                                                src={order.avatar}\r\n                                                className='dashboard-content-avatar'\r\n                                                alt={order.first_name + ' ' +order.last_name} />\r\n                                            <span>{order.first_name} {order.last_name}</span>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td><span>{order.product}</span></td>\r\n                                    <td><span>₹{order.price}</span></td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    : null}\r\n                </table>\r\n\r\n                {orders.length !== 0 ?\r\n                    <div className='dashboard-content-footer'>\r\n                        {pagination.map((item, index) => (\r\n                            <span \r\n                                key={index} \r\n                                className={item === page ? 'active-pagination' : 'pagination'}\r\n                                onClick={() => __handleChangePage(item)}>\r\n                                    {item}\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                : \r\n                    <div className='dashboard-content-footer'>\r\n                        <span className='empty-table'>No data</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders;","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\components\\DashboardHeader\\index.jsx",["81"],[],"import React from 'react';\r\n\r\nimport './styles.css';\r\nimport NotificationIcon from '../../assets/icons/notification.svg';\r\nimport SettingsIcon from '../../assets/icons/settings.svg';\r\n\r\nfunction DashboardHeader ({ btnText, onClick }) {\r\n    return(\r\n        <div className='dashbord-header-container'>\r\n            {btnText && \r\n                <button className='dashbord-header-btn' onClick={onClick}>{btnText}</button>\r\n            }\r\n\r\n            <div className='dashbord-header-right'>\r\n                <img \r\n                    src={NotificationIcon}\r\n                    alt='notification-icon'\r\n                    className='dashbord-header-icon' />\r\n                <img \r\n                    src={SettingsIcon}\r\n                    alt='settings-icon'\r\n                    className='dashbord-header-icon' />\r\n                <img\r\n                    className='dashbord-header-avatar'\r\n                    src='https://reqres.in/img/faces/9-image.jpg' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardHeader;","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\components\\Sidebar\\index.jsx",["82"],[],"import React, {useEffect, useState} from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport SideBarItem from './sidebar-item';\r\n\r\nimport './styles.css';\r\n//import logo from '../../assets/images/white-logo.png';\r\nimport LogoutIcon from '../../assets/icons/logout.svg';\r\n\r\nfunction SideBar ({ menu }) {\r\n    const location = useLocation();\r\n\r\n    const [active, setActive] = useState(1);\r\n\r\n    useEffect(() => {\r\n        menu.forEach(element => {\r\n            if (location.pathname === element.path) {\r\n                setActive(element.id);\r\n            }\r\n        });\r\n    }, [location.pathname])\r\n\r\n    const __navigate = (id) => {\r\n        setActive(id);\r\n    }\r\n\r\n    return(\r\n        <nav className='sidebar'>\r\n            <div className='sidebar-container'>\r\n                <div className='sidebar-logo-container'>\r\n                    <h1 className='logo'>FoodFarmBridge</h1>\r\n                </div>\r\n\r\n                <div className='sidebar-container'>\r\n                    <div className='sidebar-items'>\r\n                        {menu.map((item, index) => (\r\n                            <div key={index} onClick={() => __navigate(item.id)}>\r\n                                <SideBarItem\r\n                                    active={item.id === active}\r\n                                    item={item} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className='sidebar-footer'>\r\n                        <span className='sidebar-item-label'>Logout</span>\r\n                        <img \r\n                            src={LogoutIcon}\r\n                            alt='icon-logout'\r\n                            className='sidebar-item-icon' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default SideBar;","C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\constants\\data.js",[],[],"C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\constants\\orders.js",[],[],"C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\utils\\table-pagination.js",[],[],"C:\\Users\\NIVESH SAITEJA\\OneDrive\\Documents\\GitHub\\niveshfarmproject\\admin\\src\\components\\Sidebar\\sidebar-item.jsx",["83","84"],[],"import React, {useState} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nconst SideBarItem = ({ item, active }) => {\r\n    const [hover, setHover] = useState(false);\r\n    return (\r\n        <Link \r\n            to={item.path} \r\n            className={active ? 'sidebar-item-active' : 'sidebar-item'} >\r\n                <img \r\n                    src={item.icon}\r\n                    alt={`icon-${item.icon}`}\r\n                    className='sidebar-item-icon' />\r\n                <span className='sidebar-item-label'>{item.title}</span>\r\n        </Link>\r\n    )\r\n}\r\nexport default SideBarItem;\r\n",{"ruleId":"85","severity":1,"message":"86","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":23},{"ruleId":"89","severity":1,"message":"90","line":22,"column":8,"nodeType":"91","endLine":22,"endColumn":10,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"90","line":23,"column":8,"nodeType":"91","endLine":23,"endColumn":10,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":23,"column":17,"nodeType":"96","endLine":25,"endColumn":69},{"ruleId":"89","severity":1,"message":"97","line":21,"column":8,"nodeType":"91","endLine":21,"endColumn":27,"suggestions":"98"},{"ruleId":"85","severity":1,"message":"99","line":7,"column":12,"nodeType":"87","messageId":"88","endLine":7,"endColumn":17},{"ruleId":"85","severity":1,"message":"100","line":7,"column":19,"nodeType":"87","messageId":"88","endLine":7,"endColumn":27},"no-unused-vars","'DashboardHeader' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setOrders' needs the current value of 'page'.","ArrayExpression",["101"],["102"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'menu'. Either include it or remove the dependency array.",["103"],"'hover' is assigned a value but never used.","'setHover' is assigned a value but never used.",{"desc":"104","fix":"105"},{"desc":"104","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [page]",{"range":"109","text":"110"},{"range":"111","text":"110"},"Update the dependencies array to be: [location.pathname, menu]",{"range":"112","text":"113"},[803,805],"[page]",[816,818],[594,613],"[location.pathname, menu]"]